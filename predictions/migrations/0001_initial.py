# Generated by Django 5.2 on 2025-05-05 13:33

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("BAT", "Batsman"),
                            ("BOWL", "Bowler"),
                            ("ALL", "All-rounder"),
                            ("WK", "Wicket-keeper"),
                        ],
                        max_length=10,
                    ),
                ),
                ("nationality", models.CharField(max_length=50)),
                ("date_of_birth", models.DateField()),
                ("batting_stats", models.JSONField(default=dict)),
                ("bowling_stats", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("short_name", models.CharField(max_length=10)),
                ("founded_year", models.IntegerField()),
                ("home_ground", models.CharField(max_length=100)),
                ("total_matches", models.IntegerField(default=0)),
                ("wins", models.IntegerField(default=0)),
                ("losses", models.IntegerField(default=0)),
                (
                    "win_percentage",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(100.0),
                        ],
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("match_number", models.CharField(max_length=20)),
                ("season", models.CharField(max_length=10)),
                ("date", models.DateTimeField()),
                ("venue", models.CharField(max_length=100)),
                ("team1_score", models.IntegerField()),
                ("team1_wickets", models.IntegerField()),
                ("team2_score", models.IntegerField()),
                ("team2_wickets", models.IntegerField()),
                ("weather_condition", models.CharField(max_length=50)),
                ("pitch_condition", models.CharField(max_length=50)),
                (
                    "player_of_match",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="player_of_match_awards",
                        to="predictions.player",
                    ),
                ),
                (
                    "team1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches_as_team1",
                        to="predictions.team",
                    ),
                ),
                (
                    "team2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches_as_team2",
                        to="predictions.team",
                    ),
                ),
                (
                    "toss_winner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches_won_toss",
                        to="predictions.team",
                    ),
                ),
                (
                    "winner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches_won",
                        to="predictions.team",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "unique_together": {("match_number", "season")},
            },
        ),
        migrations.CreateModel(
            name="Prediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("predicted_team1_score", models.IntegerField()),
                ("predicted_team2_score", models.IntegerField()),
                (
                    "confidence",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ]
                    ),
                ),
                ("model_version", models.CharField(max_length=50)),
                ("weather_impact", models.FloatField(blank=True, null=True)),
                ("pitch_impact", models.FloatField(blank=True, null=True)),
                ("key_factors", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="predictions",
                        to="predictions.match",
                    ),
                ),
                (
                    "predicted_winner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="predicted_wins",
                        to="predictions.team",
                    ),
                ),
            ],
            options={
                "ordering": ["-match__date", "-confidence"],
            },
        ),
        migrations.CreateModel(
            name="PlayerPrediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("predicted_runs", models.IntegerField()),
                ("predicted_wickets", models.IntegerField()),
                ("predicted_economy", models.FloatField()),
                (
                    "confidence",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ]
                    ),
                ),
                ("key_factors", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="predictions",
                        to="predictions.player",
                    ),
                ),
                (
                    "prediction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_predictions",
                        to="predictions.prediction",
                    ),
                ),
            ],
            options={
                "ordering": ["-prediction__match__date", "-confidence"],
            },
        ),
        migrations.AddField(
            model_name="player",
            name="team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="players",
                to="predictions.team",
            ),
        ),
        migrations.CreateModel(
            name="PlayerPerformance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("runs_scored", models.IntegerField(default=0)),
                ("balls_faced", models.IntegerField(default=0)),
                ("fours", models.IntegerField(default=0)),
                ("sixes", models.IntegerField(default=0)),
                ("wickets_taken", models.IntegerField(default=0)),
                ("overs_bowled", models.FloatField(default=0.0)),
                ("runs_conceded", models.IntegerField(default=0)),
                ("maidens", models.IntegerField(default=0)),
                ("catches", models.IntegerField(default=0)),
                ("stumpings", models.IntegerField(default=0)),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_performances",
                        to="predictions.match",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performances",
                        to="predictions.player",
                    ),
                ),
            ],
            options={
                "ordering": ["-match__date"],
                "unique_together": {("match", "player")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="player",
            unique_together={("name", "team")},
        ),
    ]
